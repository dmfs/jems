plugins {
    id 'java-library'
    id 'org.dmfs.gitversion' version '0.7.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0' apply false
}


sourceCompatibility = 1.8

gitVersion {
    issueTracker GitHub {
        repo = "dmfs/jems"
        if (project.hasProperty("GITHUB_API_TOKEN")) {
            accessToken = GITHUB_API_TOKEN
        }
    }
    changes {
        are major when {
            commitMessage contains("(?i)#major\\b")
        }
        are major when {
            commitMessage contains("(?i)#break\\b")
        }
        are minor when {
            commitMessage containsIssue { issue -> issue.labels?.every { it.name != "bug" } }
        }
        are patch when {
            commitMessage containsIssue { issue -> issue.labels?.any { it.name == "bug" } }
        }
        are minor when {
            commitMessage contains("(?i)\\b(implement(s|ed)?|close[sd]?) #\\d+\\b")
        }
        are patch when {
            commitMessage contains("(?i)\\b(fix(e[sd])?|resolve[sd]?) #\\d+\\b")
        }
        otherwise patch
    }
    preReleases {
        on ~/main/ use { "beta" }
        on ~/(.*\/)?(?<name>.*)/ use { "alpha-${group('name')}.1" }
    }
    releaseBranchPattern ~/main$/
}

allprojects {
    group 'org.dmfs'
    repositories {
        mavenCentral()
    }
}

configurations {
    pom
}

if (project.hasProperty('SONATYPE_USERNAME') && project.hasProperty('SONATYPE_PASSWORD')) {
    apply plugin: 'io.github.gradle-nexus.publish-plugin'

    nexusPublishing {
        repositories {
            sonatype {
                username = SONATYPE_USERNAME
                password = SONATYPE_PASSWORD
            }
        }
    }
}

apply from: 'publish.gradle'
apply from: 'jacoco.gradle'

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.hamcrest:hamcrest:' + HAMCREST
    testImplementation project(":jems2-testing")
}

test {
    useJUnitPlatform()
}
